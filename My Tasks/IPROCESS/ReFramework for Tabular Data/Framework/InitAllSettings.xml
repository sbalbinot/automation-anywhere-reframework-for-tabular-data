<Task>
<TaskProperties>
		<Description />
		<Created>11/20/2019 16:18:48</Created>
		<RunDuration />
		<TotalCommands>30</TotalCommands>
		<TotalClicks>0</TotalClicks>
		<TotalMouseClicks>0</TotalMouseClicks>
		<TotalKeystrokes>0</TotalKeystrokes>
		<RepeatType>Do Not Repeat</RepeatType>
		<ReplaySpeedType>0</ReplaySpeedType>
		<LastModified>01/14/2020 16:45:13</LastModified>
		<PlayModeType>Standard</PlayModeType>
		<IsRunWithSimilerWindows>False</IsRunWithSimilerWindows>
		<IsNotifyEMail>False</IsNotifyEMail>
		<Email />
		<PriorityType>Low</PriorityType>
		<IsBlockKeystroke>False</IsBlockKeystroke>
		<IsStealthMode>False</IsStealthMode>
		<IsCapsLockOn>False</IsCapsLockOn>
		<IsNumLockOn>True</IsNumLockOn>
		<TaskTimeout>0</TaskTimeout>
		<IsContentAnalyticsEnabled>False</IsContentAnalyticsEnabled>
	</TaskProperties>
<Variables>
<Variable>
		<Name>$pub_config$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_project$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_process$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_excel_sheet_name_list$</Name>
		<Type>List</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance">&lt;Items&gt;
	&lt;Item&gt;Settings&lt;/Item&gt;
	&lt;Item&gt;Constants&lt;/Item&gt;
	&lt;Item&gt;Assets&lt;/Item&gt;
	&lt;/Items&gt;</Value>
		<MakeRandom>False</MakeRandom>
	</Variable>
<Variable>
		<Name>$pvt_excel_sheet_name$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_system_error$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_log_file$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_task_name$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_config_file$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
</Variables>
<Commands>
	<Command Disabled="True" EventData="Comment: This task outputs a settings XML file with key/value pairs to be used in the project.">
		<Name>Comment</Name>
		<CommandText>This task outputs a settings XML file with key/value pairs to be used in the project.</CommandText>
	</Command>
	<Command Disabled="True" EventData="Comment: *************************************************************************************&#xD;&#xA;*************************************************************************************">
		<Name>Comment</Name>
		<CommandText>*************************************************************************************  *************************************************************************************</CommandText>
	</Command>
	<Command Disabled="True" EventData="Comment:  Define AATaskName">
		<Name>Comment</Name>
		<CommandText> Define AATaskName</CommandText>
	</Command>
	<Command EventData="String Operation: Find &quot;(\w+).atmx&quot; within &quot;$AATaskName$&quot; and assign output to $pvt_task_name$">
		<Name>Find</Name>
	</Command>
	<Command EventData="String Operation: Extract substring from &quot;$AATaskName$&quot; and assign output to $pvt_task_name$">
		<Name>Substr</Name>
	</Command>
	<Command Disabled="True" EventData="Comment:  Define Config file">
		<Name>Comment</Name>
		<CommandText> Define Config file</CommandText>
	</Command>
	<Command EventData="String Operation: Before-After &quot;$AAApplicationPath$\Automation Anywhere\My Docs\$pub_project$\$pub_process$\Config.xml&quot; and assign output to $pub_config_file$">
		<Name>BeforeAfter</Name>
	</Command>
	<Command EventData="Begin Error Handling; Action: Stop Task; Options: Log to File, Variable Assignment,  Task Status: Fail">
		<Name>ErrorHandling</Name>
		<ErrorHandlingOptions>
			<Action>Stop Task</Action>
			<LogDataToFile>
				<FilePath>$pub_log_file$</FilePath>
				<Text>$Year$-$Month$-$Day$ $Hour$:$Minute$:$Second$;$Machine$;$pub_process$;;$pvt_task_name$;ERROR;$Error Description$;$Error Line Number$</Text>
				<AddTimeStamp>false</AddTimeStamp>
				<Append>true</Append>
			</LogDataToFile>
			<VariableAssignment>
				<Variable>$pub_system_error$</Variable>
				<ValueToAssign>Exception</ValueToAssign>
			</VariableAssignment>
			<SetTaskStatus>Pass</SetTaskStatus>
		</ErrorHandlingOptions>
	<Commands>
<Command EventData="Log to File: $Year$-$Month$-$Day$ $Hour$:$Minute$:$Second$;$Machine$;$pub_process$;;$pvt_task_name$;INFO;Lendo arquivo de configuração...; in &quot;$pub_log_file$&quot;">
		<Name>LogToFile</Name>
	</Command><Command Disabled="True" EventData="Comment:  New xml">
		<Name>Comment</Name>
		<CommandText> New xml</CommandText>
	</Command><Command EventData="XML : Start XML Session using text &lt;...&gt; Session:Default">
		<Name>StartXMLSession</Name>
	</Command><Command Disabled="True" EventData="Comment:  Read Config File">
		<Name>Comment</Name>
		<CommandText> Read Config File</CommandText>
	</Command><Command EventData="Excel: Open Spreadsheet &quot;$AAApplicationPath$\Automation Anywhere\My Docs\$pub_project$\$pub_process$\Config.xlsx&quot;. ActiveSheet: &quot;Default&quot;. Session: Default">
		<Name>Open</Name>
	</Command><Command EventData="Start Loop &quot;List Variable $pvt_excel_sheet_name_list$&quot; ">
		<Name>Loop</Name>
		<Loop For="List" List="$pvt_excel_sheet_name_list$" />
	<Commands>
<Command EventData="Variable Operation: $pvt_excel_sheet_name_list$ To $pvt_excel_sheet_name$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_excel_sheet_name$</Variable>
		<VariableValue>$pvt_excel_sheet_name_list$</VariableValue>
	</Command><Command EventData="Excel: Activate Sheet by name = $pvt_excel_sheet_name$. Session: Default">
		<Name>ActivateSheet</Name>
	</Command><Command EventData="Excel: Get All Cells Session: Default">
		<Name>GetCells</Name>
	</Command><Command EventData="XML : Insert Node with name &quot;$pvt_excel_sheet_name$&quot; and value &quot;&quot; at XPath location &quot;/Data&quot;. Session:Default">
		<Name>InsertNode</Name>
	</Command><Command EventData="Start Loop &quot;Each row in an Excel dataset of Session: Default&quot;">
		<Name>Loop</Name>
		<Loop For="ExcelDataSetRow" SessionName="Default" />
	<Commands>
<Command EventData="If $Excel Column(1)$ Not Equal To(&lt;&gt;) &quot;&quot; AND $Excel Column(2)$ Not Equal To(&lt;&gt;) &quot;&quot; AND $Counter$ Greater Than(&gt;) &quot;1&quot; Then">
		<Name>If</Name>
		<Condition Type="Expression">
			<LogicalOperator>Match All</LogicalOperator>
			<Expressions>
				<Expression>
					<Variable>$Excel Column(1)$</Variable>
					<Operator>!=</Operator>
					<ValueType>Fixed</ValueType>
					<Value />
				</Expression>
				<Expression>
					<Variable>$Excel Column(2)$</Variable>
					<Operator>!=</Operator>
					<ValueType>Fixed</ValueType>
					<Value />
				</Expression>
				<Expression>
					<Variable>$Counter$</Variable>
					<Operator>&gt;</Operator>
					<ValueType>Fixed</ValueType>
					<Value>1</Value>
				</Expression>
			</Expressions>
		</Condition>
	<Commands>
<Command EventData="XML : Insert Node with name &quot;$Excel Column(1)$&quot; and value &quot;$Excel Column(2)$&quot; at XPath location &quot;/Data/$pvt_excel_sheet_name$&quot;. Session:Default">
		<Name>InsertNode</Name>
	</Command>
</Commands>
</Command>
</Commands>
</Command>
</Commands>
</Command><Command Disabled="True" EventData="Comment:  Write data to Config XML file">
		<Name>Comment</Name>
		<CommandText> Write data to Config XML file</CommandText>
	</Command><Command EventData="XML : Save Session Data assigned to variable &quot;$pub_config$&quot;; Write Session Data into a new file &quot;$pub_config_file$&quot; with overwrite file if exists. Session:Default">
		<Name>SaveXML</Name>
	</Command><Command EventData="XML : End XML Session. Session:Default">
		<Name>EndSession</Name>
	</Command><Command EventData="Excel: Close Spreadsheet. Session: Default">
		<Name>Close</Name>
	</Command><Command EventData="Log to File: $Year$-$Month$-$Day$ $Hour$:$Minute$:$Second$;$Machine$;$pub_process$;;$pvt_task_name$;INFO;Configurações inicializadas com sucesso.; in &quot;$pub_log_file$&quot;">
		<Name>LogToFile</Name>
	</Command>
</Commands>
</Command>
</Commands>
</Task>
