<Task>
<TaskProperties>
		<Description />
		<Created>11/20/2019 16:19:20</Created>
		<RunDuration />
		<TotalCommands>93</TotalCommands>
		<TotalClicks>0</TotalClicks>
		<TotalMouseClicks>0</TotalMouseClicks>
		<TotalKeystrokes>0</TotalKeystrokes>
		<RepeatType>Do Not Repeat</RepeatType>
		<ReplaySpeedType>0</ReplaySpeedType>
		<LastModified>03/09/2020 13:45:34</LastModified>
		<PlayModeType>Standard</PlayModeType>
		<IsRunWithSimilerWindows>False</IsRunWithSimilerWindows>
		<IsNotifyEMail>False</IsNotifyEMail>
		<Email />
		<PriorityType>Low</PriorityType>
		<IsBlockKeystroke>False</IsBlockKeystroke>
		<IsStealthMode>False</IsStealthMode>
		<IsCapsLockOn>False</IsCapsLockOn>
		<IsNumLockOn>True</IsNumLockOn>
		<TaskTimeout>0</TaskTimeout>
		<IsContentAnalyticsEnabled>False</IsContentAnalyticsEnabled>
	</TaskProperties>
<Variables>
<Variable>
		<Name>$pub_system_error$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_first_status$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_retry_number$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance">0</Value>
	</Variable>
<Variable>
		<Name>$pub_config_file$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_status_file_structure$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_transaction_number$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_status$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_remarks$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_process$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_log_file$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_task_name$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_project$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_max_retry_number$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_status_file_format$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_status_file_name$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_status_file_value$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_status_file_columns$</Name>
		<Type>List</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance">&lt;Items&gt;
	&lt;Item&gt;0&lt;/Item&gt;
	&lt;/Items&gt;</Value>
		<MakeRandom>False</MakeRandom>
	</Variable>
<Variable>
		<Name>$pub_transaction_item_file$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_status_file_column_value$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_aux$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pub_system_error_message$</Name>
		<Type>Value</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance"></Value>
	</Variable>
<Variable>
		<Name>$pvt_status_file_values$</Name>
		<Type>List</Type>
		<Value xmlns:q1="http://www.w3.org/2001/XMLSchema" p3:type="q1:string" xmlns:p3="http://www.w3.org/2001/XMLSchema-instance">&lt;Items&gt;
	&lt;Item&gt;0&lt;/Item&gt;
	&lt;/Items&gt;</Value>
		<MakeRandom>False</MakeRandom>
	</Variable>
</Variables>
<Commands>
	<Command Disabled="True" EventData="Comment:  Define AATaskName">
		<Name>Comment</Name>
		<CommandText> Define AATaskName</CommandText>
	</Command>
	<Command EventData="String Operation: Find &quot;(\w+).atmx&quot; within &quot;$AATaskName$&quot; and assign output to $pvt_task_name$">
		<Name>Find</Name>
	</Command>
	<Command EventData="String Operation: Extract substring from &quot;$AATaskName$&quot; and assign output to $pvt_task_name$">
		<Name>Substr</Name>
	</Command>
	<Command EventData="Begin Error Handling; Action: Stop Task; Options: Log to File, Variable Assignment,  Task Status: Fail">
		<Name>ErrorHandling</Name>
		<ErrorHandlingOptions>
			<Action>Stop Task</Action>
			<LogDataToFile>
				<FilePath>$pub_log_file$</FilePath>
				<Text>$Year$-$Month$-$Day$ $Hour$:$Minute$:$Second$;$Machine$;$pub_process$;;$pvt_task_name$;ERROR;$Error Description$;$Error Line Number$</Text>
				<AddTimeStamp>false</AddTimeStamp>
				<Append>true</Append>
			</LogDataToFile>
			<VariableAssignment>
				<Variable>$pub_system_error$</Variable>
				<ValueToAssign>Exception</ValueToAssign>
			</VariableAssignment>
			<SetTaskStatus>Pass</SetTaskStatus>
		</ErrorHandlingOptions>
	<Commands>
<Command EventData="If $pub_transaction_number$ Equal To (=) &quot;1&quot; AND $pub_retry_number$ Equal To (=) &quot;0&quot; Then">
		<Name>If</Name>
		<Condition Type="Expression">
			<LogicalOperator>Match All</LogicalOperator>
			<Expressions>
				<Expression>
					<Variable>$pub_transaction_number$</Variable>
					<Operator>=</Operator>
					<ValueType>Fixed</ValueType>
					<Value>1</Value>
				</Expression>
				<Expression>
					<Variable>$pub_retry_number$</Variable>
					<Operator>=</Operator>
					<ValueType>Fixed</ValueType>
					<Value>0</Value>
				</Expression>
			</Expressions>
		</Condition>
	<Commands>
<Command Disabled="True" EventData="Comment:  Assign FirstTransactionEver (We need to add hearders for first status that we write in the file, then we append all other statuses.)">
		<Name>Comment</Name>
		<CommandText> Assign FirstTransactionEver (We need to add hearders for first status that we write in the file, then we append all other statuses.)</CommandText>
	</Command><Command EventData="Variable Operation: True To $pvt_first_status$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_first_status$</Variable>
		<VariableValue>True</VariableValue>
	</Command>
</Commands>
</Command><Command Disabled="True" EventData="Comment:  Get Config Attribute Value: MaxRetryNumber">
		<Name>Comment</Name>
		<CommandText> Get Config Attribute Value: MaxRetryNumber</CommandText>
	</Command><Command EventData="Run Logic &quot;ReFramework\GetXMLAttributeValue&quot; from MetaBot &quot;My MetaBots\IPROCESS\Library.mbot&quot;">
		<Name>Logic</Name>
		<MetaBot>\IPROCESS\Library.mbot</MetaBot>
		<Logic>GetXMLAttributeValue</Logic>
		<MetaBotId>91c132f1-fe89-4b96-9176-1a02aad66402</MetaBotId>
		<LogicId>c4a22ca2-e3dd-44cf-8afc-07d8811a22e9</LogicId>
		<InputParameters>
			<Parameter>
				<Name>$node$</Name>
				<Value>/Data/Constants/MaxRetryNumber</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$xml$</Name>
				<Value>$pub_config_file$</Value>
				<Type>Value</Type>
			</Parameter>
		</InputParameters>
		<OutputParameters>
			<Parameter>
				<Name>$value$</Name>
				<Value>$pvt_max_retry_number$</Value>
				<Type>Value</Type>
			</Parameter>
		</OutputParameters>
	</Command><Command EventData="If $pub_system_error$ Equal To (=) &quot;Exception&quot; Then  ">
		<Name>If</Name>
		<Condition Type="Variable">
			<VariableName>$pub_system_error$</VariableName>
			<Operator>EqualTo</Operator>
			<VariableValueType>Fix</VariableValueType>
			<FixValue>Exception</FixValue>
			<VariableValue />
		</Condition>
	<Commands>
<Command Disabled="True" EventData="Comment:  Handle System Error">
		<Name>Comment</Name>
		<CommandText> Handle System Error</CommandText>
	</Command><Command EventData="Variable Operation: Application Exception To $pvt_status$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_status$</Variable>
		<VariableValue>Application Exception</VariableValue>
	</Command><Command EventData="Variable Operation: $pub_system_error_message$ To $pvt_remarks$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_remarks$</Variable>
		<VariableValue>$pub_system_error_message$</VariableValue>
	</Command><Command Disabled="True" EventData="Comment:  Robot Retry?">
		<Name>Comment</Name>
		<CommandText> Robot Retry?</CommandText>
	</Command><Command EventData="If $pvt_max_retry_number$ Greater than(&gt;) &quot;0&quot; Then  ">
		<Name>If</Name>
		<Condition Type="Variable">
			<VariableName>$pvt_max_retry_number$</VariableName>
			<Operator>GreaterThan</Operator>
			<VariableValueType>Fix</VariableValueType>
			<FixValue>0</FixValue>
			<VariableValue />
		</Condition>
	<Commands>
<Command Disabled="True" EventData="Comment:  Max Retry Reached?">
		<Name>Comment</Name>
		<CommandText> Max Retry Reached?</CommandText>
	</Command><Command EventData="If $pub_retry_number$ Greater than or Equal To(&gt;=) $pvt_max_retry_number$ Then  ">
		<Name>If</Name>
		<Condition Type="Variable">
			<VariableName>$pub_retry_number$</VariableName>
			<Operator>Greater Than Or Equal To</Operator>
			<VariableValueType>Variable</VariableValueType>
			<FixValue />
			<VariableValue>$pvt_max_retry_number$</VariableValue>
		</Condition>
	<Commands>
<Command EventData="Variable Operation: $pub_transaction_number$ To $pvt_aux$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_aux$</Variable>
		<VariableValue>$pub_transaction_number$</VariableValue>
	</Command><Command EventData="Variable Operation: $pub_transaction_number$ + 1 To $pub_transaction_number$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_transaction_number$</Variable>
		<VariableValue>$pub_transaction_number$ + 1</VariableValue>
	</Command><Command EventData="Variable Operation: 0 To $pub_retry_number$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_retry_number$</Variable>
		<VariableValue>0</VariableValue>
	</Command><Command EventData="Log to File: $Year$-$Month$-$Day$ $Hour$:$Minute$:$Second$;$Machine$;$pub_process$;;$pvt_task_name$;INFO;Número máximo de tentativas alcançado. Processamento concluído com erros.; in &quot;$pub_log_file$&quot;">
		<Name>LogToFile</Name>
	</Command>
</Commands>
</Command><Command EventData="Else">
		<Name>Else</Name>
	<Commands>
<Command EventData="Variable Operation: $pub_transaction_number$ To $pvt_aux$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_aux$</Variable>
		<VariableValue>$pub_transaction_number$</VariableValue>
	</Command><Command EventData="Variable Operation: $pub_retry_number$ + 1 To $pub_retry_number$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_retry_number$</Variable>
		<VariableValue>$pub_retry_number$ + 1</VariableValue>
	</Command><Command EventData="Log to File: $Year$-$Month$-$Day$ $Hour$:$Minute$:$Second$;$Machine$;$pub_process$;;$pvt_task_name$;INFO;Ocorreu falha no processamento, tentando novamente...Tentativa: $pub_retry_number$; in &quot;$pub_log_file$&quot;">
		<Name>LogToFile</Name>
	</Command>
</Commands>
</Command>
</Commands>
</Command><Command EventData="Else">
		<Name>Else</Name>
	<Commands>
<Command EventData="Variable Operation: $pub_transaction_number$ To $pvt_aux$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_aux$</Variable>
		<VariableValue>$pub_transaction_number$</VariableValue>
	</Command><Command EventData="Variable Operation: $pub_transaction_number$ + 1 To $pub_transaction_number$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_transaction_number$</Variable>
		<VariableValue>$pub_transaction_number$ + 1</VariableValue>
	</Command><Command EventData="Variable Operation: 0 To $pub_retry_number$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_retry_number$</Variable>
		<VariableValue>0</VariableValue>
	</Command><Command EventData="Log to File: $Year$-$Month$-$Day$ $Hour$:$Minute$:$Second$;$Machine$;$pub_process$;;$pvt_task_name$;INFO;Ocorreu falha no processamento.; in &quot;$pub_log_file$&quot;">
		<Name>LogToFile</Name>
	</Command>
</Commands>
</Command><Command EventData="Run Task &quot;$AAApplicationPath$\Automation Anywhere\My Tasks\$pub_project$\$pub_process$\Framework\TakeScreenshot.atmx&quot; @Repeat: Do Not Repeat @Speed: Normal Speed @Pass Variable as argument: $pub_config_file$; $pub_log_file$; $pub_process$; $pub_project$; $pub_system_error$">
		<Name>Run Task</Name>
		<Task>$AAApplicationPath$\Automation Anywhere\My Tasks\$pub_project$\$pub_process$\Framework\TakeScreenshot.atmx</Task>
		<Speed>Standard</Speed>
		<Option>Do Not Repeat</Option>
		<MappedVariables>
			<MappedVariable>
				<SourceVariable>pub_config_file</SourceVariable>
				<DestinationVariable>pub_config_file</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_log_file</SourceVariable>
				<DestinationVariable>pub_log_file</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_process</SourceVariable>
				<DestinationVariable>pub_process</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_project</SourceVariable>
				<DestinationVariable>pub_project</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_system_error</SourceVariable>
				<DestinationVariable>pub_system_error</DestinationVariable>
			</MappedVariable>
		</MappedVariables>
	</Command><Command Disabled="True" EventData="Comment:  Close applications (tive que reiniciar a variável system_error porque não saberia se o CloseAllApplications ocorreu erro ou não, pois para chegar nesse ponto a variável de erro já precisa estar preenchida - para matar os processos.)">
		<Name>Comment</Name>
		<CommandText> Close applications (tive que reiniciar a variável system_error porque não saberia se o CloseAllApplications ocorreu erro ou não, pois para chegar nesse ponto a variável de erro já precisa estar preenchida - para matar os processos.)</CommandText>
	</Command><Command EventData="Variable Operation: &quot;&quot; To $pub_system_error$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_system_error$</Variable>
		<VariableValue />
	</Command><Command EventData="Run Task &quot;$AAApplicationPath$\Automation Anywhere\My Tasks\$pub_project$\$pub_process$\Framework\CloseAllApplications.atmx&quot; @Repeat: Do Not Repeat @Speed: Normal Speed @Pass Variable as argument: $pub_config_file$; $pub_log_file$; $pub_process$; $pub_system_error$">
		<Name>Run Task</Name>
		<Task>$AAApplicationPath$\Automation Anywhere\My Tasks\$pub_project$\$pub_process$\Framework\CloseAllApplications.atmx</Task>
		<Speed>Standard</Speed>
		<Option>Do Not Repeat</Option>
		<MappedVariables>
			<MappedVariable>
				<SourceVariable>pub_config_file</SourceVariable>
				<DestinationVariable>pub_config_file</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_log_file</SourceVariable>
				<DestinationVariable>pub_log_file</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_process</SourceVariable>
				<DestinationVariable>pub_process</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_system_error</SourceVariable>
				<DestinationVariable>pub_system_error</DestinationVariable>
			</MappedVariable>
		</MappedVariables>
	</Command><Command EventData="If $pub_system_error$ Equal To (=) &quot;Exception&quot; Then  ">
		<Name>If</Name>
		<Condition Type="Variable">
			<VariableName>$pub_system_error$</VariableName>
			<Operator>EqualTo</Operator>
			<VariableValueType>Fix</VariableValueType>
			<FixValue>Exception</FixValue>
			<VariableValue />
		</Condition>
	<Commands>
<Command EventData="Run Task &quot;$AAApplicationPath$\Automation Anywhere\My Tasks\$pub_project$\$pub_process$\Framework\KillAllProcesses.atmx&quot; @Repeat: Do Not Repeat @Speed: Normal Speed @Pass Variable as argument: $pub_config_file$; $pub_log_file$; $pub_process$; $pub_project$; $pub_system_error$">
		<Name>Run Task</Name>
		<Task>$AAApplicationPath$\Automation Anywhere\My Tasks\$pub_project$\$pub_process$\Framework\KillAllProcesses.atmx</Task>
		<Speed>Standard</Speed>
		<Option>Do Not Repeat</Option>
		<MappedVariables>
			<MappedVariable>
				<SourceVariable>pub_config_file</SourceVariable>
				<DestinationVariable>pub_config_file</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_log_file</SourceVariable>
				<DestinationVariable>pub_log_file</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_process</SourceVariable>
				<DestinationVariable>pub_process</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_project</SourceVariable>
				<DestinationVariable>pub_project</DestinationVariable>
			</MappedVariable>
			<MappedVariable>
				<SourceVariable>pub_system_error</SourceVariable>
				<DestinationVariable>pub_system_error</DestinationVariable>
			</MappedVariable>
		</MappedVariables>
	</Command>
</Commands>
</Command><Command EventData="Else">
		<Name>Else</Name>
	<Commands>
<Command EventData="Variable Operation: Exception To $pub_system_error$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_system_error$</Variable>
		<VariableValue>Exception</VariableValue>
	</Command>
</Commands>
</Command>
</Commands>
</Command><Command EventData="Else If $pub_system_error$ Equal To (=) &quot;BusinessRuleException&quot; Then  ">
		<Name>ElseIf</Name>
		<Condition Type="Variable">
			<VariableName>$pub_system_error$</VariableName>
			<Operator>EqualTo</Operator>
			<VariableValueType>Fix</VariableValueType>
			<FixValue>BusinessRuleException</FixValue>
			<VariableValue />
		</Condition>
	<Commands>
<Command Disabled="True" EventData="Comment:  Handle Business Rule Exception">
		<Name>Comment</Name>
		<CommandText> Handle Business Rule Exception</CommandText>
	</Command><Command EventData="Variable Operation: Business Exception To $pvt_status$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_status$</Variable>
		<VariableValue>Business Exception</VariableValue>
	</Command><Command EventData="Variable Operation: $pub_system_error_message$ To $pvt_remarks$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_remarks$</Variable>
		<VariableValue>$pub_system_error_message$</VariableValue>
	</Command><Command EventData="Variable Operation: $pub_transaction_number$ To $pvt_aux$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_aux$</Variable>
		<VariableValue>$pub_transaction_number$</VariableValue>
	</Command><Command EventData="Variable Operation: $pub_transaction_number$ + 1 To $pub_transaction_number$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_transaction_number$</Variable>
		<VariableValue>$pub_transaction_number$ + 1</VariableValue>
	</Command><Command EventData="Variable Operation: 0 To $pub_retry_number$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_retry_number$</Variable>
		<VariableValue>0</VariableValue>
	</Command><Command EventData="Log to File: $Year$-$Month$-$Day$ $Hour$:$Minute$:$Second$;$Machine$;$pub_process$;;$pvt_task_name$;INFO;Processamento concluído com restrições.; in &quot;$pub_log_file$&quot;">
		<Name>LogToFile</Name>
	</Command>
</Commands>
</Command><Command EventData="Else">
		<Name>Else</Name>
	<Commands>
<Command Disabled="True" EventData="Comment: Success">
		<Name>Comment</Name>
		<CommandText>Success</CommandText>
	</Command><Command EventData="Log to File: $Year$-$Month$-$Day$ $Hour$:$Minute$:$Second$;$Machine$;$pub_process$;;$pvt_task_name$;INFO;Processamento concluído com sucesso.; in &quot;$pub_log_file$&quot;">
		<Name>LogToFile</Name>
	</Command><Command EventData="Variable Operation: Success To $pvt_status$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_status$</Variable>
		<VariableValue>Success</VariableValue>
	</Command><Command EventData="Variable Operation: &quot;&quot; To $pvt_remarks$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_remarks$</Variable>
		<VariableValue />
	</Command><Command EventData="Variable Operation: $pub_transaction_number$ To $pvt_aux$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pvt_aux$</Variable>
		<VariableValue>$pub_transaction_number$</VariableValue>
	</Command><Command EventData="Variable Operation: $pub_transaction_number$ + 1 To $pub_transaction_number$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_transaction_number$</Variable>
		<VariableValue>$pub_transaction_number$ + 1</VariableValue>
	</Command><Command EventData="Variable Operation: 0 To $pub_retry_number$">
		<Name>VariableOperation</Name>
		<OperationType>Variable operation</OperationType>
		<VariableType>User Variables</VariableType>
		<Variable>$pub_retry_number$</Variable>
		<VariableValue>0</VariableValue>
	</Command>
</Commands>
</Command><Command Disabled="True" EventData="Comment:  Create Status row">
		<Name>Comment</Name>
		<CommandText> Create Status row</CommandText>
	</Command><Command EventData="String Operation: Before-After &quot;$pvt_aux$;$pvt_status$;$pvt_remarks$&quot; and assign output to $pvt_status_file_value$">
		<Name>BeforeAfter</Name>
	</Command><Command EventData="String Operation: Split &quot;$pub_status_file_structure$&quot; with delimiter &quot;;&quot; and assign output to $pvt_status_file_columns$">
		<Name>Split</Name>
	</Command><Command EventData="Start Loop &quot;List Variable $pvt_status_file_columns$&quot; ">
		<Name>Loop</Name>
		<Loop For="List" List="$pvt_status_file_columns$" />
	<Commands>
<Command EventData="If $pvt_status_file_columns$ Includes &quot;AutomationAnywhere ReFramework&quot; Then">
		<Name>If</Name>
		<Condition Type="Expression">
			<LogicalOperator>Match Any</LogicalOperator>
			<Expressions>
				<Expression>
					<Variable>$pvt_status_file_columns$</Variable>
					<Operator>Includes</Operator>
					<ValueType>Fixed</ValueType>
					<Value>AutomationAnywhere ReFramework</Value>
				</Expression>
			</Expressions>
		</Condition>
	<Commands>
<Command EventData="Continue">
		<Name />
	</Command>
</Commands>
</Command><Command Disabled="True" EventData="Comment:  Get Transaction Item Attribute Value: StatusFileColumn">
		<Name>Comment</Name>
		<CommandText> Get Transaction Item Attribute Value: StatusFileColumn</CommandText>
	</Command><Command EventData="Run Logic &quot;ReFramework\GetXMLAttributeValue&quot; from MetaBot &quot;My MetaBots\IPROCESS\Library.mbot&quot;">
		<Name>Logic</Name>
		<MetaBot>\IPROCESS\Library.mbot</MetaBot>
		<Logic>GetXMLAttributeValue</Logic>
		<MetaBotId>91c132f1-fe89-4b96-9176-1a02aad66402</MetaBotId>
		<LogicId>c4a22ca2-e3dd-44cf-8afc-07d8811a22e9</LogicId>
		<InputParameters>
			<Parameter>
				<Name>$node$</Name>
				<Value>//Row[@ID=$pvt_aux$]/$pvt_status_file_columns$</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$xml$</Name>
				<Value>$pub_transaction_item_file$</Value>
				<Type>Value</Type>
			</Parameter>
		</InputParameters>
		<OutputParameters>
			<Parameter>
				<Name>$value$</Name>
				<Value>$pvt_status_file_column_value$</Value>
				<Type>Value</Type>
			</Parameter>
		</OutputParameters>
	</Command><Command EventData="String Operation: Before-After &quot;$pvt_status_file_value$;$pvt_status_file_column_value$&quot; and assign output to $pvt_status_file_value$">
		<Name>BeforeAfter</Name>
	</Command>
</Commands>
</Command><Command Disabled="True" EventData="Comment: Write Status">
		<Name>Comment</Name>
		<CommandText>Write Status</CommandText>
	</Command><Command Disabled="True" EventData="Comment:  Get Config Attribute Value: StatusFileFormat">
		<Name>Comment</Name>
		<CommandText> Get Config Attribute Value: StatusFileFormat</CommandText>
	</Command><Command EventData="Run Logic &quot;ReFramework\GetXMLAttributeValue&quot; from MetaBot &quot;My MetaBots\IPROCESS\Library.mbot&quot;">
		<Name>Logic</Name>
		<MetaBot>\IPROCESS\Library.mbot</MetaBot>
		<Logic>GetXMLAttributeValue</Logic>
		<MetaBotId>91c132f1-fe89-4b96-9176-1a02aad66402</MetaBotId>
		<LogicId>c4a22ca2-e3dd-44cf-8afc-07d8811a22e9</LogicId>
		<InputParameters>
			<Parameter>
				<Name>$node$</Name>
				<Value>/Data/Settings/StatusFileFormat</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$xml$</Name>
				<Value>$pub_config_file$</Value>
				<Type>Value</Type>
			</Parameter>
		</InputParameters>
		<OutputParameters>
			<Parameter>
				<Name>$value$</Name>
				<Value>$pvt_status_file_format$</Value>
				<Type>Value</Type>
			</Parameter>
		</OutputParameters>
	</Command><Command Disabled="True" EventData="Comment: Excel format?">
		<Name>Comment</Name>
		<CommandText>Excel format?</CommandText>
	</Command><Command EventData="If $pvt_status_file_format$ Equal To (=) &quot;Excel&quot; Then  ">
		<Name>If</Name>
		<Condition Type="Variable">
			<VariableName>$pvt_status_file_format$</VariableName>
			<Operator>EqualTo</Operator>
			<VariableValueType>Fix</VariableValueType>
			<FixValue>Excel</FixValue>
			<VariableValue />
		</Condition>
	<Commands>
<Command EventData="If File Does Not Exist (&quot;$pub_status_file_name$&quot;)  Then  ">
		<Name>If</Name>
		<Condition Type="FileNotExist">
			<FileName />
			<Wait>0</Wait>
		</Condition>
	<Commands>
<Command EventData="Run Logic &quot;App Integration\Excel\CreateWorkbook&quot; from MetaBot &quot;My MetaBots\IPROCESS\Library.mbot&quot;">
		<Name>Logic</Name>
		<MetaBot>\IPROCESS\Library.mbot</MetaBot>
		<Logic>CreateWorkbook</Logic>
		<MetaBotId>91c132f1-fe89-4b96-9176-1a02aad66402</MetaBotId>
		<LogicId>581349f3-a310-449b-95e5-27de54527e83</LogicId>
		<InputParameters>
			<Parameter>
				<Name>$sheet_name$</Name>
				<Value>Status</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$workbook_name$</Name>
				<Value>$pub_status_file_name$</Value>
				<Type>Value</Type>
			</Parameter>
		</InputParameters>
		<OutputParameters />
	</Command>
</Commands>
</Command><Command Disabled="True" EventData="Comment: First status?">
		<Name>Comment</Name>
		<CommandText>First status?</CommandText>
	</Command><Command EventData="If $pvt_first_status$ Equal To (=) &quot;True&quot; Then  ">
		<Name>If</Name>
		<Condition Type="Variable">
			<VariableName>$pvt_first_status$</VariableName>
			<Operator>EqualTo</Operator>
			<VariableValueType>Fix</VariableValueType>
			<FixValue>True</FixValue>
			<VariableValue />
		</Condition>
	<Commands>
<Command EventData="Run Logic &quot;App Integration\Excel\WriteRange&quot; from MetaBot &quot;My MetaBots\IPROCESS\Library.mbot&quot;">
		<Name>Logic</Name>
		<MetaBot>\IPROCESS\Library.mbot</MetaBot>
		<Logic>WriteRange</Logic>
		<MetaBotId>91c132f1-fe89-4b96-9176-1a02aad66402</MetaBotId>
		<LogicId>1102a43a-85eb-465b-a29a-30ba4ce80ade</LogicId>
		<InputParameters>
			<Parameter>
				<Name>$starting_cell$</Name>
				<Value>A1</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$workbook_name$</Name>
				<Value>$pub_status_file_name$</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$sheet_name$</Name>
				<Value>Status</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$add_headers$</Name>
				<Value>True</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$data$</Name>
				<Value>$pub_status_file_structure$|$pvt_status_file_value$</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$row_delimiter$</Name>
				<Value>|</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$column_delimiter$</Name>
				<Value>;</Value>
				<Type>Value</Type>
			</Parameter>
		</InputParameters>
		<OutputParameters />
	</Command>
</Commands>
</Command><Command EventData="Else">
		<Name>Else</Name>
	<Commands>
<Command EventData="Run Logic &quot;App Integration\Excel\AppendRange&quot; from MetaBot &quot;My MetaBots\IPROCESS\Library.mbot&quot;">
		<Name>Logic</Name>
		<MetaBot>\IPROCESS\Library.mbot</MetaBot>
		<Logic>AppendRange</Logic>
		<MetaBotId>91c132f1-fe89-4b96-9176-1a02aad66402</MetaBotId>
		<LogicId>d08a37c0-e55d-4aed-81ad-0b196fe50dcc</LogicId>
		<InputParameters>
			<Parameter>
				<Name>$workbook_name$</Name>
				<Value>$pub_status_file_name$</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$sheet_name$</Name>
				<Value>Status</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$row_delimiter$</Name>
				<Value>|</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$column_delimiter$</Name>
				<Value>;</Value>
				<Type>Value</Type>
			</Parameter>
			<Parameter>
				<Name>$data$</Name>
				<Value>$pub_status_file_structure$|$pvt_status_file_value$</Value>
				<Type>Value</Type>
			</Parameter>
		</InputParameters>
		<OutputParameters />
	</Command>
</Commands>
</Command>
</Commands>
</Command><Command EventData="Else">
		<Name>Else</Name>
	<Commands>
<Command Disabled="True" EventData="Comment: First status?">
		<Name>Comment</Name>
		<CommandText>First status?</CommandText>
	</Command><Command EventData="If $pvt_first_status$ Equal To (=) &quot;True&quot; Then  ">
		<Name>If</Name>
		<Condition Type="Variable">
			<VariableName>$pvt_first_status$</VariableName>
			<Operator>EqualTo</Operator>
			<VariableValueType>Fix</VariableValueType>
			<FixValue>True</FixValue>
			<VariableValue />
		</Condition>
	<Commands>
<Command EventData="Log to File: $pub_status_file_structure$&#xD;&#xA;$pvt_status_file_value$&#xD;&#xA; in &quot;$pub_status_file_name$&quot;">
		<Name>LogToFile</Name>
	</Command>
</Commands>
</Command><Command EventData="Else">
		<Name>Else</Name>
	<Commands>
<Command EventData="Log to File: $pvt_status_file_value$&#xD;&#xA; in &quot;$pub_status_file_name$&quot;">
		<Name>LogToFile</Name>
	</Command>
</Commands>
</Command>
</Commands>
</Command>
</Commands>
</Command>
</Commands>
</Task>
